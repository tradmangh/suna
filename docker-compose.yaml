services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend/.env:/app/.env:ro
    environment:
      - ENV_MODE=local
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_SSL=False
    depends_on:
      redis:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/.env.local:/app/.env.local:ro
    environment:
      - NODE_ENV=production
    command: ["npm", "run", "start"]
    depends_on:
      - backend

  supabase:
    image: supabase/cli:latest
    working_dir: /project
    volumes:
      - ./:/project
      - supabase_data:/project/supabase
    command: ["supabase", "start", "--no-analytics"]
    ports:
      - "54321:54321"
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"

  migrate:
    image: supabase/cli:latest
    working_dir: /project
    volumes:
      - ./:/project
      - supabase_data:/project/supabase
    command: ["supabase", "db", "push", "--yes"]
    depends_on:
      supabase:
        condition: service_started

volumes:
  redis-data:
  supabase_data: